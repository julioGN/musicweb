[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "musicweb"
version = "1.0.0"
description = "Professional Music Library Management Suite"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "MusicWeb Team", email = "contact@musicweb.app"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.5.0,<3.0.0",
    "numpy>=1.21.0,<2.0.0",
    "streamlit>=1.25.0,<2.0.0",
    "plotly>=5.10.0,<6.0.0",
    "rapidfuzz>=2.0.0,<4.0.0",
    "ytmusicapi>=1.5.0,<2.0.0",
    "requests>=2.25.0,<3.0.0",
    "matplotlib>=3.5.0,<4.0.0",
    "matplotlib-venn>=0.11.7,<1.0.0",
    "openpyxl>=3.0.0,<4.0.0",
    "click>=8.0.0,<9.0.0",
    "importlib_resources>=5.0.0; python_version < '3.9'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "mkdocs-mermaid2-plugin>=1.1.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
]

[project.urls]
Homepage = "https://github.com/your-username/musicweb"
Documentation = "https://musicweb.readthedocs.io/"
Repository = "https://github.com/your-username/musicweb.git"
"Bug Tracker" = "https://github.com/your-username/musicweb/issues"

[project.scripts]
musicweb = "musicweb.cli.main:cli"
musicweb-web = "musicweb.web.app:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
musicweb = ["web/styles/*.css", "web/assets/*.png", "config/*.yaml"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["musicweb"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "matplotlib_venn.*", 
    "plotly.*",
    "streamlit.*",
    "ytmusicapi.*",
    "rapidfuzz.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/musicweb"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]